whiteboarding
    -- go over whiteboarding 1 hour a day
    -- alternate white board with a text editor (typing & writing)
    -- coderbyte.com / hackerrank.com / codewars.com

makersquare slide deck
    -- first 2 week makersquare content is extremely valuable
    -- review slide deck every other day for 45 min
    -- do not dive into old sprint code

make flash cards
    -- take 20 min a day to review flashcards on 'strong' items on your resume
    -- do a google search for common interview questions related to those skills
    -- bonsaiden.github.io/javascript-garden/ for peculiarities of the javascript language

asana
    -- organize your asana project daily
    -- for job search progress

troubleshooting
    -- data structures, sorting algorithms, recursion
    -- treat interviews like yr peers
      -- communicate comfortably
      -- clarify prompts & think aloud

** explain what you can do for them **
  -- give them a personal story that is a good elevator pitch of yourself
      -- practice
  -- first impression : make sure that they hire someone that's professional

** create a personal website **

** personal narrative **
  -- use the word **//APPLICATION//** not project
  -- full stack application that i built

** tell them you're a bad ass **
** tell them why you do whatever it takes to get the job done **
** demonstrate passion **
** no negativity **


** personal narrative **
  introduction
    the hook
      thesis statement
  body
    passion
      supporting evidence of why youre passionate
  conclusion
    moral of the story
      hire me, worth the $


// think about the bullet points + talking points (tangents) of each of your projects //
  -- separating facts



  ==========================


  - comunicate confidently no matter what
     -- i dont have the answer off the top of my head, but if i had my laptop with me i would google " " on stack overflow to dive deeper into the problem
     -- always think out loud

  -- NEVER SAY A NUMBER -- !!! !!!! !!! ! !! ! ! ! ! !!  !

  ===

  ** saying strengths **

  my strong skillset in angular really helped contribute to the success of the applications I built and I'm proud that the team looked to me for guidance, particularly when we had issues with routing which I was able to help resolve.


  ===

  ** behavioral **

  STAR method!
    S- situation you were in
    T- tasks you were responsible for
    A- action you took
    R- results of your action

    remember to always address what you learned from this situation

    ===

    
